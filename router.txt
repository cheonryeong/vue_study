do it! vue.js 입문

라우팅 - 웹 페이지간의 이동 방법(싱글 페이지 어플리케이션, SPA에서 주로 사용) // SPA: 싱글 페이지 어플리케이션, 페이지를 이동할 때 미리 해당 페이지를 받아 놓고 이동 시에 클라이언트의 라우팅을 이용하며 화면을 갱신하는 패턴을 적용한 어플리케이션
라우팅을 쓰는 이유: 화면 간의 전환이 매끄러움, 빠르게 화면 조작이 가능해 사용자 경험을 향상
뷰 라우터를 이용할 시, 뷰로 만든 페이지 간의 자유로운 이동 가능

뷰 라우터를 규현하기 위한 특수 태그 기능
<router-link to="URL 값"> => 페이지 이동 태그, 화면에는 <a>로 표시되며 누르면 해당 url로 이동
<router-view> => 페이지 표시 태그, 변경되는 url에 따라 해당 컴포넌트를 뿌려줌. url 값에 따라 갱신되는 화면 영역


여러 개의 컴포넌트를 동시에 표시할 수 있는 라우터가 따로 존재(네스티드 라우터, 네임드 뷰)

네스티드 라우터 - 라우터로 페이지를 이동할 때 최소 2개 이상의 컴포넌트를 화면에 나타날 수 있다. 상위 컴포넌트 1개에 하위 컴포넌트 1개를 포함하는 구조
<네스티드 라우터는 화면을 구성하는 컴포넌트의 수가 적을 때는 유용하지만 많아질수록 한계가 있다.>

네임드 뷰 - 특정 페이지로 이동했을 경우, 여러 개의 컴포넌트를 동시에 표시. 네스티드와 달리 같은 레벨에서 여러 개의 컴포넌트를 한 번에 표시하는 방법.

axios(자주 쓰이는 http 통신 라이브러리)를 사용하기 위한 cdn => <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
axios의 http get 요청 => axios.get('URL 주소').then().catch();
    해당 url 주소에 대해 http get 요청을 보내고 서버에서 보낸 데이터를 정상적으로 받아오면 then() 안에 정의한 로직이 실행, 오류가 발생하면 catch()에 정의한 로직이 수행.

axios의 http post 요청 => .axios.post('URL 주소').then().catch();
    해당 url주소에 대해 http post 요청을 보냄. then과 catch는 get 요청과 동일.

http 요청에 대한 옵션 속성 정의 // 요청에 대한 자세한 속성들을 직접 정의하여 보낼 수 있다.
ex) axios({
    method: 'get',
    url: 'url 주소',
    ...
});

------------------------------------------------------------

뷰 템플릿 - html, css등의 마크업 속성과 뷰 인스턴스에서 정의한 데이터 및 로직들을 연결하여 사용자가 브라우저에서 볼 수 있는 형태의 html로 변환해 주는 속성
사용자가 볼 수는 없지만 라이브러리 내부적으로 template 속성에서 정의한 마크업 + 뷰 데이터를 가상 돔 기반의 render() 함수로 변환, 변환된 render() 함수는 최종적으로 사용자가 볼 수 있게 화면을 그려준다. 변환 과정에서 뷰의 반응성(나중에 설명)이 화면에 더해진다.

템플릿에서 사용하는 뷰의 속성, 문법
1. 데이터 바인딩
    - html 화면 요소를 뷰 인스턴스의 데이터와 연결 ex){{}} 문법과 v-bind 속성
    - {{}}은 가장 기본적인 텍스트 삽입 방식. 뷰 데이터가 변경되어도 값을 변경하고 싶지 않다면 v-once 속성 사용(99p 참조)
    - v-bind는 아이디, 클래스, 스타일 등의 html의 속성 값에 뷰 데이터 값을 연결할 때 사용. v-bind를 : 로 간단화 시킬 수 있음 ex) v-bind:id 는 :id 와 동일. 다만 구분이 힘드므로 v-bind 형식이 좋음.
2. 자바스크립트 표현식
    - {{}}안에 자바스크립트 표현식 사용 가능
    - 선언문과 분기 구문은 사용 불가(삼항연산자는 사용 가능), 복잡한 연산은 인스턴스 안에서 처리하고 화면에는 간단한 연산 결과만 표시해야 함.(102p)
3. 디렉티브
    - html 태그 안에 v- 접두사를 가지는 모든 속성들(v-bind도 당연히 해당).
    - 화면의 요소를 더 쉽게 조작하기 위해 사용하는 기능.
    - 자주 사용하는 종류는 105p 참고
4. 이벤트 처리
5. 고급 템플릿 기법

------------------------------------------------------------

싱글 파일 컴포넌트 체계 -> .vue 파일로 프로젝트 구조를 구성하는 방식, .vue 파일 1개는 뷰 애플리케이션을 구성하는 1개의 컴포넌트와 동일하다.

<template>
    <!-- html 태그 내용, 화면에 표시할 요소들을 정의하는 영역 ex)html+뷰 데이터 바인딩 -->
</template>

<script>
export default {
    // 자바스크립트 내용, 뷰 컴포넌트의 내용을 정의하는 영역 ex)template, data, methods 등
}

<style>
    /* css 스타일 내용, 템플릿에 추가한 html 태그의 css 스타일을 정의하는 영역 */
</style>